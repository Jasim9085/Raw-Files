{
  "array_creation": [
    "np.array(object, dtype=None, copy=True, order='K', subok=False, ndmin=0)",
    "np.zeros(shape, dtype=float, order='C')",
    "np.ones(shape, dtype=float, order='C')",
    "np.empty(shape, dtype=float, order='C')",
    "np.arange([start,] stop[, step,], dtype=None)",
    "np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0)",
    "np.logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None, axis=0)",
    "np.eye(N, M=None, k=0, dtype=float, order='C')",
    "np.identity(n, dtype=None)",
    "np.full(shape, fill_value, dtype=None, order='C')",
    "np.copy(anything, everything)",
    "np.asarray(a, dtype=None, order=None)",
    "np.fromfunction(function, shape, **kwargs)",
    "np.zeros_like(a, dtype=None, order='K', subok=True, shape=None)",
    "np.ones_like(a, dtype=None, order='K', subok=True, shape=None)",
    "np.full_like(a, fill_value, dtype=None, order='K', subok=True, shape=None)"
  ],
  "array_manipulation": [
    "np.reshape(a, newshape, order='C')",
    "np.ravel(a, order='C')",
    "np.transpose(a, axes=None)",
    "np.swapaxes(a, axis1, axis2)",
    "np.concatenate((a1, a2, ...), axis=0, out=None, dtype=None, casting='same_kind')",
    "np.stack(arrays, axis=0, out=None)",
    "np.vstack(tup)",
    "np.hstack(tup)",
    "np.dstack(tup)",
    "np.split(ary, indices_or_sections, axis=0)",
    "np.array_split(ary, indices_or_sections, axis=0)",
    "np.vsplit(ary, indices_or_sections)",
    "np.hsplit(ary, indices_or_sections)",
    "np.dsplit(ary, indices_or_sections)",
    "np.resize(a, new_shape)",
    "np.append(arr, values, axis=None)",
    "np.insert(arr, obj, values, axis=None)",
    "np.delete(arr, obj, axis=None)",
    "np.unique(ar, return_index=False, return_inverse=False, return_counts=False, axis=None)",
    "np.squeeze(a, axis=None)",
    "np.expand_dims(a, axis)",
    "np.flip(m, axis=None)",
    "np.fliplr(m)",
    "np.flipud(m)",
    "np.roll(a, shift, axis=None)"
  ],
  "mathematical_functions": [
    "np.add(x1, x2, /)",
    "np.subtract(x1, x2, /)",
    "np.multiply(x1, x2, /)",
    "np.divide(x1, x2, /)",
    "np.power(x1, x2, /)",
    "np.sqrt(x, /)",
    "np.exp(x, /)",
    "np.log(x, /)",
    "np.log10(x, /)",
    "np.log2(x, /)",
    "np.sin(x, /)",
    "np.cos(x, /)",
    "np.tan(x, /)",
    "np.arcsin(x, /)",
    "np.arccos(x, /)",
    "np.arctan(x, /)",
    "np.absolute(x, /)",
    "np.abs(x, /)",
    "np.round(a, decimals=0, out=None)",
    "np.floor(x, /)",
    "np.ceil(x, /)",
    "np.trunc(x, /)",
    "np.mod(x1, x2, /)",
    "np.remainder(x1, x2, /)"
  ],
  "statistics_and_aggregation": [
    "np.sum(a, axis=None, dtype=None, out=None, keepdims=False)",
    "np.prod(a, axis=None, dtype=None, out=None, keepdims=False)",
    "np.mean(a, axis=None, dtype=None, out=None, keepdims=False)",
    "np.std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False)",
    "np.var(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False)",
    "np.min(a, axis=None, out=None, keepdims=False)",
    "np.max(a, axis=None, out=None, keepdims=False)",
    "np.argmin(a, axis=None, out=None)",
    "np.argmax(a, axis=None, out=None)",
    "np.median(a, axis=None, out=None, overwrite_input=False, keepdims=False)",
    "np.percentile(a, q, axis=None, out=None, overwrite_input=False, method='linear', keepdims=False)",
    "np.quantile(a, q, axis=None, out=None, overwrite_input=False, method='linear', keepdims=False)",
    "np.average(a, axis=None, weights=None, returned=False)",
    "np.corrcoef(x, y=None, rowvar=True)",
    "np.cov(m, y=None, rowvar=True, bias=False, ddof=None)",
    "np.cumsum(a, axis=None, dtype=None, out=None)",
    "np.cumprod(a, axis=None, dtype=None, out=None)"
  ],
  "linear_algebra_linalg": [
    "np.dot(a, b, out=None)",
    "np.vdot(a, b)",
    "np.inner(a, b)",
    "np.outer(a, b, out=None)",
    "np.matmul(x1, x2, /)",
    "np.linalg.det(a)",
    "np.linalg.eig(a)",
    "np.linalg.inv(a)",
    "np.linalg.svd(a, full_matrices=True, compute_uv=True)",
    "np.linalg.solve(a, b)",
    "np.linalg.matrix_power(a, n)",
    "np.linalg.norm(x, ord=None, axis=None, keepdims=False)"
  ],
  "random_sampling_random": [
    "np.random.rand(d0, d1, ..., dn)",
    "np.random.randn(d0, d1, ..., dn)",
    "np.random.randint(low, high=None, size=None, dtype=int)",
    "np.random.choice(a, size=None, replace=True, p=None)",
    "np.random.shuffle(x)",
    "np.random.permutation(x)",
    "np.random.seed(seed=None)",
    "np.random.normal(loc=0.0, scale=1.0, size=None)",
    "np.random.uniform(low=0.0, high=1.0, size=None)"
  ],
  "indexing_and_logic": [
    "np.where(condition, [x, y, ]/)",
    "np.select(condlist, choicelist, default=0)",
    "np.all(a, axis=None, out=None, keepdims=False)",
    "np.any(a, axis=None, out=None, keepdims=False)",
    "np.logical_and(x1, x2, /)",
    "np.logical_or(x1, x2, /)",
    "np.logical_not(x, /)",
    "np.logical_xor(x1, x2, /)",
    "np.isclose(a, b, rtol=1e-05, atol=1e-08, equal_nan=False)",
    "np.allclose(a, b, rtol=1e-05, atol=1e-08, equal_nan=False)",
    "np.array_equal(a1, a2, equal_nan=False)",
    "np.array_equiv(a1, a2)",
    "np.isinf(x, /)",
    "np.isnan(x, /)"
  ],
  "constants_and_types": [
    "np.pi",
    "np.e",
    "np.nan",
    "np.inf",
    "np.newaxis",
    "np.dtype",
    "np.bool_",
    "np.int_",
    "np.intc",
    "np.intp",
    "np.int8",
    "np.int16",
    "np.int32",
    "np.int64",
    "np.uint8",
    "np.uint16",
    "np.uint32",
    "np.uint64",
    "np.float_",
    "np.float16",
    "np.float32",
    "np.float64",
    "np.complex_",
    "np.complex64",
    "np.complex128"
  ]
}